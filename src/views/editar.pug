extends index

block content
    .container.mt-5
        h1.text-center.text-primary Editar Materia

        //- Mensaje de éxito o error
        if mensaje
            .alert.alert-success.text-center= mensaje
        if error
            .alert.alert-danger.text-center= error
        //- Formulario de edición
        form#updateUserForm(action=`/usuarios/materias/editar/${materia._id} ` method="PUT" class="needs-validation" novalidate)
        
            .mb-3
                label(for="nombre") Nombre de la Materia
                input#nombre.form-control(type="text" name="nombre" readonly value=materia.nombre)

            .mb-3
                label(for="nivel") Nivel
                select#nivel.form-select(name="nivel" required)
                    option(value="" disabled selected) Selecciona un nivel
                    if niveles && niveles.length
                        each nivel in niveles
                            option(value=nivel selected=(materia.nivel === nivel))= nivel
                    else
                        option(value="" disabled) No hay niveles disponibles
            .mb-3
                label(for="grado") Grado
                select#grado.form-select(name="grado")
                    option(value="" disabled selected) Selecciona un grado
                    if grados && grados.length
                        each grado in grados
                            option(value=grado selected=(materia.grado === grado))= grado
                    else
                        option(value="" disabled) No hay grados disponibles
            .mb-3
                label(for="division") Division
                select#grado.form-select(name="division" )
                    option(value="" disabled selected) Selecciona una division
                    if divisiones && divisiones.length
                        each division in divisiones
                            option(value=division selected=(materia.division === division))= division
                    else
                        option(value="" disabled) No hay division disponibles
            .mb-3
                label(for="turno") Turno
                select#grado.form-select(name="turno" )
                    option(value="" disabled selected) Selecciona un turno
                    if turnos && turnos.length
                        each turno in turnos
                            option(value=turno selected=(materia.turno === turno))= turno
                    else
                        option(value="" disabled) No hay turnos disponibles 
                        

            .mb-3
                label(for="profesor") Profesor
                select#profesor.form-select(name="profesor")
                    option(value="" disabled selected) Selecciona un profesor
                    if profesores && profesores.length
                        each profesor in profesores
                            option(value=profesor._id selected=(materia.profesor && materia.profesor._id === profesor._id))= `${profesor.nombres} ${profesor.apellidos}`
                    else
                        option(value="" disabled) No hay profesores disponibles 
                        

            .mb-3
                label(for="horario[dia]") Día de la Semana
                select#horarioDia.form-select(name="horario[dia]")
                    option(value="" disabled selected) Selecciona un día
                    option(value="Lunes" selected=(materia.horario.dia === 'Lunes')) Lunes
                    option(value="Martes" selected=(materia.horario.dia === 'Martes')) Martes
                    option(value="Miércoles" selected=(materia.horario.dia === 'Miércoles')) Miércoles
                    option(value="Jueves" selected=(materia.horario.dia === 'Jueves')) Jueves
                    option(value="Viernes" selected=(materia.horario.dia === 'Viernes')) Viernes

            .mb-3
                label(for="horario[horaInicio]") Hora de Inicio
                input#horaInicio.form-control(type="time" name="horario[horaInicio]" value=materia.horario.horaInicio)

            .mb-3
                label(for="horario[horaFin]") Hora de Fin
                input#horaFin.form-control(type="time" name="horario[horaFin]" value=materia.horario.horaFin)

            button.btn.btn-primary(type="submit" id="submitBtn") Guardar Cambios


        script.
            document.getElementById('updateUserForm').addEventListener('submit', async function(event) {
                event.preventDefault(); // Previene el envío tradicional del formulario

                const formData = new FormData(this); // Crea un objeto FormData con los datos del formulario
                const datos = Object.fromEntries(formData); // Convierte FormData a un objeto

                try {
                    const response = await fetch(this.action, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(datos), // Convierte el objeto a JSON
                    });

                    const result = await response.json(); // Espera la respuesta y la convierte a JSON

                    if (response.ok) {
                        // Si la respuesta es exitosa, muestra el mensaje
                        alert(result.message);
                        // Redirige o actualiza la página según sea necesario
                        window.location.href = '/usuarios/materias'; // Descomentar para redirigir
                    } else {
                        // Muestra el mensaje de error
                        alert(result.message);
                    }
                } catch (error) {
                    console.error('Error al actualizar el usuario:', error);
                    alert('Error al actualizar el usuario');
                }
            });